<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Hedwig Explains</title>
    <description>A healthy mind is an inquisitive mind</description>
    <link>https://hiteshhedwig.github.io/hedwig_explains/</link>
    <atom:link href="https://hiteshhedwig.github.io/hedwig_explains/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Fri, 12 Feb 2021 13:38:19 +0530</pubDate>
    <lastBuildDate>Fri, 12 Feb 2021 13:38:19 +0530</lastBuildDate>
    <generator>Jekyll v4.2.0</generator>
    
      <item>
        <title>Intuition behind Random Forest</title>
        <description>&lt;h1 id=&quot;what-are-we-gonna-do-in-this-blog&quot;&gt;What are we gonna do in this blog?&lt;/h1&gt;
&lt;p&gt;Learning about what goes behind random forest. What is it that beginner struggles understanding random forest. What makes random forest so powerful. Further, we will discuss intuition behind random forest. Explaining random forest in detail with own handcrafted code and sklearn provided.&lt;/p&gt;

&lt;h1 id=&quot;personal-experience&quot;&gt;Personal Experience&lt;/h1&gt;
&lt;p&gt;When i was starting out with Machine Learning. All i could see the hype of Random Forest being powerful and quite handy in use. I was abit curious. So, i started learning about it in depth. It became a bit hard to comprehend the words like &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ensemble&lt;/code&gt; and random forest in general. But after understanding it, i can say it’s really makes sense why random forest works. I’ll be sharing what are my key insights on this.&lt;/p&gt;

&lt;h1 id=&quot;what-is-the-intuition-behind-random-forest&quot;&gt;What is the intuition behind Random Forest?&lt;/h1&gt;
&lt;p&gt;Random Forest is derived from the concept of Decision Tree. Assuming you know what decision trees are. In a nutshell, When we use lots of decision trees (i.e. 20,100,150) to train &amp;amp; predict the input data. This lot (or Group) of decision trees are known as &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ensemble&lt;/code&gt;. Rather than using single decision tree to finalize decision. We use many of them. It’s same as imagine you have to decide which book to buy for statistics. When you do is talking to many people and then buy which most of the people prefer.&lt;/p&gt;

&lt;p&gt;Another example: Let’s say you going to interview. So there will be different rounds of interview and you will be evaluated on different features of yours. Finally, getting selected or not would be what most of the interviewer perceive. If 2 out of 3 agree with selection you will be selected. If 2 out of 3 don’t agree with selection, then you will be rejected.&lt;/p&gt;

&lt;p&gt;Same Goes in Random Forest: You take many decision trees (it could be thousands too), for now let’s say 100 and each of them trained on random data points(row) of training data. Then you use, testing data and each decision tree will predict according to the feature they have been trained on.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Important: All the decision trees shouldn’t be trained on same features. That could lead to biased predictions.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Training on random features(reason why random forest are called random) allows to create more flexible and ungreedy algorithm. Decision tree uses &lt;a href=&quot;https://www.edureka.co/community/46109/what-is-greedy-approach-in-decision-tree-algorithm&quot;&gt;greedy algorithm&lt;/a&gt;.
So, it’s important to feed random features.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://upload.wikimedia.org/wikipedia/commons/7/76/Random_forest_diagram_complete.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I hope, you get a bit clarity what it means when we say random forest. Although, your concepts will be totally cleared when you dive into coding the decision tree from scratch.&lt;/p&gt;

&lt;h1 id=&quot;coding-our-own-random-forest&quot;&gt;Coding our own Random forest&lt;/h1&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&amp;gt; from sklearn.datasets import make_moons
&amp;gt; from sklearn.model_selection import train_test_split

&amp;gt; mo= make_moons(n_samples=10000, noise=0.4) #creating toy data
&amp;gt; X_train, X_test, y_train, y_test= train_test_split(mo[0], mo[1], test_size=0.2, random_state=42)
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Small peak into data and label.We are looking at first 5 data points and their label(or target). As you can see below, Left side array is X and Y value. And Right Side Array is labels of respective row value.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&amp;gt; X_train[:5], y_train[:5]

(array([[ 0.10186633, -0.20643133],
        [-0.24668162,  1.0486827 ],
        [-0.57215016,  0.30076258],
        [ 0.05560597,  0.9361636 ],
        [-0.91425428, -0.33931685]]), array([1, 0, 0, 1, 0]))
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Just a simple look at our data. Green and Purple are the different classes and in this we have to predict if X and Y coordinates are provided what will be the class of the point.&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;%matplotlib inline
import matplotlib.pyplot as plt

plt.scatter(mo[0][:,0], mo[0][:,1], c=mo[1], s=1)
plt.show()
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/hedwig_explains/img/moon.png&quot; alt=&quot;plot&quot; /&gt;&lt;/p&gt;

</description>
        <pubDate>Thu, 11 Feb 2021 00:00:00 +0530</pubDate>
        <link>https://hiteshhedwig.github.io/hedwig_explains/2021/02/11/intuition-behind-random-forest/</link>
        <guid isPermaLink="true">https://hiteshhedwig.github.io/hedwig_explains/2021/02/11/intuition-behind-random-forest/</guid>
        
        <category>randomforest</category>
        
        <category>datascience</category>
        
        <category>intuition</category>
        
        
      </item>
    
      <item>
        <title>Changing Folder Name for model training</title>
        <description>&lt;h1 id=&quot;what-are-we-doing-in-this-blog&quot;&gt;What are we doing in this blog?&lt;/h1&gt;

&lt;p&gt;We are changing folders name like this:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Folder Name from &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;n02113023-Pembroke&lt;/code&gt; Changed to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pembroke&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Folder Name from &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;n02113624-toy_poodle&lt;/code&gt; Changed to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Toy Poodle&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Folder Name from &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;n02115641-dingo&lt;/code&gt; Changed to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Dingo&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If want to learn this, Go on with reading:&lt;/p&gt;

&lt;p&gt;In this, dataset directory. I have downloaded, famous standford &lt;a href=&quot;http://vision.stanford.edu/aditya86/ImageNetDogs/&quot;&gt;dataset&lt;/a&gt;. The Stanford Dogs dataset contains images of 120 breeds of dogs from around the world. This dataset has been built using images and annotation from ImageNet for the task of fine-grained image categorization.&lt;/p&gt;

&lt;p&gt;The name of the folders (which will be used as classes while training) have names like, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;n02093256-Staffordshire_bullterrier&lt;/code&gt;. We definitely don’t want our class to be like that but rather simple &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Staffordshire Bullterrier&lt;/code&gt;. The python script will get rid of any weird characters that are unneccessary.&lt;/p&gt;

&lt;p&gt;Now, we have our path defined where the data is situated. In my case, i had uploaded it to google drive. Time consuming upload, avoid it if possible.&lt;/p&gt;

&lt;p&gt;Let’s say we have folder name like this:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;n02093256-Staffordshire_bullterrier&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Here is our process of obtaining what we want,&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;We first split on the basis of  - (hyphen) charachter&lt;/li&gt;
  &lt;li&gt;Then we obtain list like this: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;['n02093256' , 'Staffordshire_bullterrier']&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;After that, we use slicing technique to select second index.&lt;/li&gt;
  &lt;li&gt;Then after we have what we wanted, we can simply again split on the basis of  _ (underscore)&lt;/li&gt;
  &lt;li&gt;Then we obtain something like this:
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;['Staffordshire','bullterrier']&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;After we have what we wanted we can simply join the list back. And use capitalize to make first letter of word capitalize.&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;📝 Note: This code will need to be modified according to the folder name you are dealing with.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;'''
THIS PYTHON CODE CHANGES NAME OF FILES IN A FOLDER
'''

import os
import string


def change_name(folder_name): 
    folder_name=folder_name.split('-') #n02113023-Pembroke-&amp;gt;['n02113023','Pembroke'] 
    folder_name= ' '.join(folder_name[1:]) #Selecting index after 1 and joining them
    folder_name=folder_name.split('_') # Again splitting becayse name seem to be like Staffordshire_bullterrier
    folder_name= ' '.join(folder_name) #again joining after getting rid of _ 
    return string.capwords(folder_name) #or we can use capitalize()

#iterating over all the folders and changing file name
for fn in os.listdir(path):

    new_path= os.path.join(path,fn)
    #folder_name= os.path.basename(new_path) #alternative use of to know file name    
    new_folder_name= change_name(fn)
    os.rename(os.path.join(path,fn),os.path.join(path,new_folder_name))
    print (f'Folder Name from {fn} Changed to {new_folder_name}')
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;Output :
Folder Name from n02113023-Pembroke Changed to Pembroke
Folder Name from n02093256-Staffordshire_bullterrier Changed to Staffordshire Bullterrier
Folder Name from n02093428-American_Staffordshire_terrier Changed to American Staffordshire Terrier
Folder Name from n02113624-toy_poodle Changed to Toy Poodle
Folder Name from n02100236-German_short-haired_pointer Changed to German Short Haired Pointer
Folder Name from n02115641-dingo Changed to Dingo
Folder Name from n02089867-Walker_hound Changed to Walker Hound
Folder Name from n02099601-golden_retriever Changed to Golden Retriever
Folder Name from n02105162-malinois Changed to Malinois
Folder Name from n02100735-English_setter Changed to English Setter
Folder Name from n02097298-Scotch_terrier Changed to Scotch Terrier
Folder Name from n02095889-Sealyham_terrier Changed to Sealyham Terrier
Folder Name from n02106550-Rottweiler Changed to Rottweiler
Folder Name from n02088094-Afghan_hound Changed to Afghan Hound
Folder Name from n02112018-Pomeranian Changed to Pomeranian
Folder Name from n02099429-curly-coated_retriever Changed to Curly Coated Retriever
Folder Name from n02095314-wire-haired_fox_terrier Changed to Wire Haired Fox Terrier
Folder Name from n02116738-African_hunting_dog Changed to African Hunting Dog
Folder Name from n02091467-Norwegian_elkhound Changed to Norwegian Elkhound
Folder Name from n02096294-Australian_terrier Changed to Australian Terrier
Folder Name from n02108422-bull_mastiff Changed to Bull Mastiff
Folder Name from n02096177-cairn Changed to Cairn
Folder Name from n02104365-schipperke Changed to Schipperke
Folder Name from n02101556-clumber Changed to Clumber
Folder Name from n02090721-Irish_wolfhound Changed to Irish Wolfhound
Folder Name from n02110806-basenji Changed to Basenji
Folder Name from n02105251-briard Changed to Briard
Folder Name from n02102040-English_springer Changed to English Springer
Folder Name from n02085620-Chihuahua Changed to Chihuahua
Folder Name from n02110063-malamute Changed to Malamute
Folder Name from n02109525-Saint_Bernard Changed to Saint Bernard
Folder Name from n02107683-Bernese_mountain_dog Changed to Bernese Mountain Dog
Folder Name from n02111129-Leonberg Changed to Leonberg
Folder Name from n02094114-Norfolk_terrier Changed to Norfolk Terrier
Folder Name from n02110627-affenpinscher Changed to Affenpinscher
Folder Name from n02111277-Newfoundland Changed to Newfoundland
Folder Name from n02112350-keeshond Changed to Keeshond
Folder Name from n02106382-Bouvier_des_Flandres Changed to Bouvier Des Flandres
Folder Name from n02093647-Bedlington_terrier Changed to Bedlington Terrier
Folder Name from n02107312-miniature_pinscher Changed to Miniature Pinscher
Folder Name from n02115913-dhole Changed to Dhole
Folder Name from n02111889-Samoyed Changed to Samoyed
Folder Name from n02091032-Italian_greyhound Changed to Italian Greyhound
Folder Name from n02085782-Japanese_spaniel Changed to Japanese Spaniel
Folder Name from n02098286-West_Highland_white_terrier Changed to West Highland White Terrier
Folder Name from n02090379-redbone Changed to Redbone
Folder Name from n02099849-Chesapeake_Bay_retriever Changed to Chesapeake Bay Retriever
Folder Name from n02106662-German_shepherd Changed to German Shepherd
Folder Name from n02105505-komondor Changed to Komondor
Folder Name from n02087046-toy_terrier Changed to Toy Terrier
Folder Name from n02098105-soft-coated_wheaten_terrier Changed to Soft Coated Wheaten Terrier
Folder Name from n02099267-flat-coated_retriever Changed to Flat Coated Retriever
Folder Name from n02104029-kuvasz Changed to Kuvasz
Folder Name from n02096585-Boston_bull Changed to Boston Bull
Folder Name from n02097130-giant_schnauzer Changed to Giant Schnauzer
Folder Name from n02086646-Blenheim_spaniel Changed to Blenheim Spaniel
Folder Name from n02112706-Brabancon_griffon Changed to Brabancon Griffon
Folder Name from n02111500-Great_Pyrenees Changed to Great Pyrenees
Folder Name from n02088466-bloodhound Changed to Bloodhound
Folder Name from n02101006-Gordon_setter Changed to Gordon Setter
Folder Name from n02108089-boxer Changed to Boxer
Folder Name from n02113799-standard_poodle Changed to Standard Poodle
Folder Name from n02086910-papillon Changed to Papillon
Folder Name from n02113712-miniature_poodle Changed to Miniature Poodle
Folder Name from n02095570-Lakeland_terrier Changed to Lakeland Terrier
Folder Name from n02098413-Lhasa Changed to Lhasa
Folder Name from n02106030-collie Changed to Collie
Folder Name from n02092002-Scottish_deerhound Changed to Scottish Deerhound
Folder Name from n02110185-Siberian_husky Changed to Siberian Husky
Folder Name from n02088238-basset Changed to Basset
Folder Name from n02097047-miniature_schnauzer Changed to Miniature Schnauzer
Folder Name from n02108551-Tibetan_mastiff Changed to Tibetan Mastiff
Folder Name from n02105412-kelpie Changed to Kelpie
Folder Name from n02106166-Border_collie Changed to Border Collie
Folder Name from n02102480-Sussex_spaniel Changed to Sussex Spaniel
Folder Name from n02110958-pug Changed to Pug
Folder Name from n02109961-Eskimo_dog Changed to Eskimo Dog
Folder Name from n02096437-Dandie_Dinmont Changed to Dandie Dinmont
Folder Name from n02091831-Saluki Changed to Saluki
Folder Name from n02105056-groenendael Changed to Groenendael
Folder Name from n02113186-Cardigan Changed to Cardigan
Folder Name from n02102973-Irish_water_spaniel Changed to Irish Water Spaniel
Folder Name from n02113978-Mexican_hairless Changed to Mexican Hairless
Folder Name from n02092339-Weimaraner Changed to Weimaraner
Folder Name from n02105855-Shetland_sheepdog Changed to Shetland Sheepdog
Folder Name from n02089973-English_foxhound Changed to English Foxhound
Folder Name from n02102318-cocker_spaniel Changed to Cocker Spaniel
Folder Name from n02097658-silky_terrier Changed to Silky Terrier
Folder Name from n02088632-bluetick Changed to Bluetick
Folder Name from n02091635-otterhound Changed to Otterhound
Folder Name from n02108000-EntleBucher Changed to Entlebucher
Folder Name from n02094258-Norwich_terrier Changed to Norwich Terrier
Folder Name from n02112137-chow Changed to Chow
Folder Name from n02094433-Yorkshire_terrier Changed to Yorkshire Terrier
Folder Name from n02097474-Tibetan_terrier Changed to Tibetan Terrier
Folder Name from n02100583-vizsla Changed to Vizsla
Folder Name from n02097209-standard_schnauzer Changed to Standard Schnauzer
Folder Name from n02096051-Airedale Changed to Airedale
Folder Name from n02091134-whippet Changed to Whippet
Folder Name from n02107908-Appenzeller Changed to Appenzeller
Folder Name from n02105641-Old_English_sheepdog Changed to Old English Sheepdog
Folder Name from n02085936-Maltese_dog Changed to Maltese Dog
Folder Name from n02087394-Rhodesian_ridgeback Changed to Rhodesian Ridgeback
Folder Name from n02108915-French_bulldog Changed to French Bulldog
Folder Name from n02100877-Irish_setter Changed to Irish Setter
Folder Name from n02109047-Great_Dane Changed to Great Dane
Folder Name from n02107574-Greater_Swiss_Mountain_dog Changed to Greater Swiss Mountain Dog
Folder Name from n02086240-Shih-Tzu Changed to Shih Tzu
Folder Name from n02093859-Kerry_blue_terrier Changed to Kerry Blue Terrier
Folder Name from n02086079-Pekinese Changed to Pekinese
Folder Name from n02107142-Doberman Changed to Doberman
Folder Name from n02088364-beagle Changed to Beagle
Folder Name from n02101388-Brittany_spaniel Changed to Brittany Spaniel
Folder Name from n02093754-Border_terrier Changed to Border Terrier
Folder Name from n02089078-black-and-tan_coonhound Changed to Black And Tan Coonhound
Folder Name from n02099712-Labrador_retriever Changed to Labrador Retriever
Folder Name from n02093991-Irish_terrier Changed to Irish Terrier
Folder Name from n02090622-borzoi Changed to Borzoi
Folder Name from n02091244-Ibizan_hound Changed to Ibizan Hound
Folder Name from n02102177-Welsh_springer_spaniel Changed to Welsh Springer Spaniel
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Hopefully, this post was helpful in some way !&lt;/p&gt;

</description>
        <pubDate>Tue, 20 Oct 2020 00:00:00 +0530</pubDate>
        <link>https://hiteshhedwig.github.io/hedwig_explains/2020/10/20/changing-folder-name-for-model-training/</link>
        <guid isPermaLink="true">https://hiteshhedwig.github.io/hedwig_explains/2020/10/20/changing-folder-name-for-model-training/</guid>
        
        <category>python</category>
        
        <category>filename</category>
        
        <category>datascience</category>
        
        <category>dog-breed</category>
        
        
      </item>
    
      <item>
        <title>Biggest Dataset on Internet</title>
        <description>&lt;h1 id=&quot;what-are-we-doing-and-why&quot;&gt;What are we doing? And Why?&lt;/h1&gt;
&lt;p&gt;If you are a datascientist or computer vision researcher who always looking for neat image  or any sort of dataset because it’s sometimes so hard to find right dataset for you. In this post, i am sharing some resources which would be super helpful for you. I will also show the right way to download them in case of &lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Google Open Image Dataset&lt;/code&gt;&lt;/strong&gt;. What right way you may ask? It’s simply a python script which will do the job for you. You don’t need to rush in anyway.&lt;/p&gt;

&lt;h1 id=&quot;open-images-dataset-v6&quot;&gt;Open Images Dataset V6&lt;/h1&gt;

&lt;p&gt;When i was starting out from scratch. It was quite difficult to know from where to download the dataset. Or if that dataset right for you. Open Images Dataset V6 by Google is an amazing source to download the data.&lt;/p&gt;

&lt;p&gt;You can find it &lt;a href=&quot;https://storage.googleapis.com/openimages/web/visualizer/index.html?set=train&amp;amp;type=detection&amp;amp;c=%2Fm%2F0pg52&quot;&gt;here&lt;/a&gt;. There will be plethora of categories in the dropdown menu. It would look something like this.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://postimg.cc/ygqVGYWV&quot;&gt;&lt;img src=&quot;https://i.postimg.cc/1tXff8QN/googleos.png&quot; alt=&quot;googleos.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;brief&quot;&gt;Brief&lt;/h2&gt;

&lt;p&gt;As you can see, the category for this tutorial i have chosen is taxi. You may chose anything else, Ofcourse!. There are several filters on the top of red bar in the website which is important to know about. Like:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Subset : (Train, Validation)&lt;/li&gt;
  &lt;li&gt;Type: (Detection, Segementation)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Subset is only to show you the content which will be downloaded if you download train or validation filtered data.&lt;/p&gt;

&lt;p&gt;Type is crucial, it will give you whatever type of problem deal with. For example, for this example we have used detection. So the images we are getting is bounding boxes. If you switch it to, segmentation you get segemented image. As simple as that.&lt;/p&gt;

&lt;h2 id=&quot;how-to-download&quot;&gt;How to download?&lt;/h2&gt;

&lt;p&gt;It’s quite difficult to ambigous to download from the website. But fortunately we have tool which makes it easy to one liner!&lt;/p&gt;

&lt;p&gt;We use a tool name &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;OIDv4_ToolKit&lt;/code&gt; available on &lt;a href=&quot;https://github.com/theAIGuysCode/OIDv4_ToolKit&quot;&gt;github&lt;/a&gt;. It makes is fairly easy to download images.&lt;/p&gt;

&lt;p&gt;Cloning the github repo.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;📝 Note: If you are running the command in a terminal. Omit “!” .&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&amp;gt; git clone https://github.com/theAIGuysCode/OIDv4_ToolKit.git 
Cloning into 'OIDv4_ToolKit'...
remote: Enumerating objects: 444, done.
remote: Total 444 (delta 0), reused 0 (delta 0), pack-reused 444
Receiving objects: 100% (444/444), 34.09 MiB | 35.95 MiB/s, done.
Resolving deltas: 100% (157/157), done.
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Moving inside directory and extracting some files. You don’t need to bother much about this, just copy paste and run on your machine.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&amp;gt; cd OIDv4_ToolKit/
&amp;gt; curl &quot;https://d1vvhvl2y92vvt.cloudfront.net/awscli-exe-linux-x86_64.zip&quot; -o &quot;awscliv2.zip&quot;
&amp;gt; unzip awscliv2.zip
&amp;gt; sudo ./aws/install
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Now, here comes the magic. One command where you specify :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;class&lt;/code&gt; : In our case, we will download &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Taxi&lt;/code&gt; images. You can download multiple classes by just typing class one after another.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;type_csv&lt;/code&gt;: Do you want to download train data? Validation data?&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;limit&lt;/code&gt;: How many images we want to download? I am downloading 100 as an example.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&amp;gt; python main.py downloader --classes Taxi --type_csv train --limit 100
.'   `.|_   _||_   _ `.         | |  | |   
		/  .-.  \ | |    | | `. \ _   __ | |__| |_  
		| |   | | | |    | |  | |[ \ [  ]|____   _| 
		\  `-'  /_| |_  _| |_.' / \ \/ /     _| |_  
		 `.___.'|_____||______.'   \__/     |_____|
	

             _____                    _                 _             
            (____ \                  | |               | |            
             _   \ \ ___  _ _ _ ____ | | ___   ____  _ | | ____  ____ 
            | |   | / _ \| | | |  _ \| |/ _ \ / _  |/ || |/ _  )/ ___)
            | |__/ / |_| | | | | | | | | |_| ( ( | ( (_| ( (/ /| |    
            |_____/ \___/ \____|_| |_|_|\___/ \_||_|\____|\____)_|    
                                                          
        
    [INFO] | Downloading Taxi.
   [ERROR] | Missing the class-descriptions-boxable.csv file.
[DOWNLOAD] | Do you want to download the missing file? [Y/n] Y
...145%, 0 MB, 31097 KB/s, 0 seconds passed
[DOWNLOAD] | File class-descriptions-boxable.csv downloaded into OID/csv_folder/class-descriptions-boxable.csv.
   [ERROR] | Missing the train-annotations-bbox.csv file.
[DOWNLOAD] | Do you want to download the missing file? [Y/n] Y
...100%, 1138 MB, 33727 KB/s, 34 seconds passed
[DOWNLOAD] | File train-annotations-bbox.csv downloaded into OID/csv_folder/train-annotations-bbox.csv.

Taxi
    [INFO] | Downloading train images.
    [INFO] | [INFO] Found 1434 online images for train.
    [INFO] | Limiting to 100 images.
    [INFO] | Download of 100 images in train.
100% 100/100 [02:08&amp;lt;00:00,  1.28s/it]
    [INFO] | Done!
    [INFO] | Creating labels for Taxi of train.
    [INFO] | Labels creation completed.
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h1 id=&quot;sample-image-from-data&quot;&gt;Sample image from data&lt;/h1&gt;

&lt;p&gt;Now it has been downloaded. Dataset will be downloaded in the file &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/OID/Dataset/train/&lt;/code&gt;
Let’s see the sample image?&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&amp;gt; from PIL import Image
&amp;gt; Image.open('/content/OIDv4_ToolKit/OID/Dataset/train/Taxi/23274c285653cc1c.jpg')
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href=&quot;https://postimg.cc/Cn5nhxCW&quot;&gt;&lt;img src=&quot;https://i.postimg.cc/3NCXZykJ/car.png&quot; alt=&quot;car.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So it looks pretty good! Remember i have only downloaded 100 images. You can download with any limit. If its available on dataset. It will be downloaded. We also have bounding boxes in labels folder.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;⚡ Tip: csv file have been downloaded in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;csv_folder&lt;/code&gt;. You can use it as pandas dataframe for more flexible usage of data.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;open-public-datasets&quot;&gt;Open Public datasets&lt;/h1&gt;
&lt;p&gt;As a data scientist, you dont always deal with image dataset. So, this &lt;a href=&quot;https://github.com/hiteshhedwig/awesome-public-datasets&quot;&gt;Github&lt;/a&gt; Repo got very detailed list of every dataset for gamut of professions.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://postimg.cc/YvzrPwYg&quot;&gt;&lt;img src=&quot;https://i.postimg.cc/0yLzbkNt/dataset.png&quot; alt=&quot;dataset.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;⚡ Tip: If you are new to github. You can fork it and contribute to it as well.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;amazon-google-microsoft-public-dataset&quot;&gt;Amazon, Google, Microsoft Public Dataset&lt;/h1&gt;

&lt;p&gt;Waait.. we just discussed google dataset a while ago. That was especially for image based problems. Incase you want to research for the data yourself that you struggling to find. The &lt;a href=&quot;https://datasetsearch.research.google.com/&quot;&gt;Google Dataset Search engine&lt;/a&gt; will help you to research more about it.&lt;/p&gt;

&lt;p&gt;Like Google, &lt;a href=&quot;https://registry.opendata.aws/&quot;&gt;Amazon&lt;/a&gt; also have some public dataset to help you with your research.&lt;/p&gt;

&lt;p&gt;And so do, &lt;a href=&quot;https://azure.microsoft.com/en-in/services/open-datasets/catalog/&quot;&gt;Microsoft&lt;/a&gt; .&lt;/p&gt;

&lt;p&gt;Datasets we have discussed so far. They will definitely provide the edge you looking for (if you look correctly). They are almost all you need. Although there are sites like kaggle, datatruks but as we have mentioned google dataset engine. It automatically directs you to the sites.&lt;/p&gt;

</description>
        <pubDate>Mon, 12 Oct 2020 00:00:00 +0530</pubDate>
        <link>https://hiteshhedwig.github.io/hedwig_explains/2020/10/12/biggest-dataset-on-internet/</link>
        <guid isPermaLink="true">https://hiteshhedwig.github.io/hedwig_explains/2020/10/12/biggest-dataset-on-internet/</guid>
        
        <category>dataset</category>
        
        <category>opensource</category>
        
        
      </item>
    
  </channel>
</rss>
